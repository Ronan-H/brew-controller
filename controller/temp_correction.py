
ref_high = 100.02
ref_low = 0
ref_range = ref_high - ref_low
sensor_values = [
    {
        'raw_high': 99.87,
        'raw_low': 0.37,
        'raw_range': 99.5,
        'second_adjust': -0.02
    },
    {
        'raw_high': 100,
        'raw_low': 0.12,
        'raw_range': 99.88,
        'second_adjust': 0.02
    }
]

def get_corrected_values(raw_values):
    corrected = []

    for i in range(2):
        raw_value = raw_values[i]

        values = sensor_values[i]
        raw_low = values['raw_low']
        raw_range = values['raw_range']
        corrected_value = (((raw_value - raw_low) * ref_range) / raw_range) + ref_low + values['second_adjust']

        corrected.append(corrected_value)
    
    return corrected


class TempSmoother():
    def __init__(self, max_times_diff, jump_diff):
        self.max_times_diff = max_times_diff
        self.jump_diff = jump_diff

        self.ref = 999
        self.times_diff = 0

    def get_next(self, cur_temp):
        diff = abs(cur_temp - self.ref)

        if cur_temp == self.ref or diff >= self.jump_diff or self.times_diff >= self.max_times_diff:
            self.times_diff = 0
            self.ref = cur_temp
            return cur_temp
        
        self.times_diff += 1
        return self.ref

# temps = [24.63, 24.57, 24.63, 24.57, 24.63, 24.63, 24.63, 24.63, 24.57, 24.57, 24.63, 24.63, 24.63, 24.63, 24.57, 24.57, 24.57, 24.57, 24.57, 24.57, 24.63, 24.63, 24.57, 24.63, 24.57, 24.51, 24.57, 24.57, 24.51, 24.57, 24.51, 24.51, 24.51, 24.57, 24.57, 24.51, 24.51, 24.51, 24.57, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.51, 24.45, 24.51, 24.51, 24.45, 24.51, 24.45, 24.51, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.51, 24.51, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.45, 24.38, 24.45, 24.38, 24.45, 24.38, 24.45, 24.45, 24.38, 24.45, 24.45, 24.45, 24.38, 24.45, 24.38, 24.38, 24.45, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.38, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.38, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.32, 24.26, 24.32, 24.26, 24.32, 24.26, 24.32, 24.26, 24.26, 24.32, 24.26, 24.32, 24.26, 24.26, 24.26, 24.26, 24.26, 24.26, 24.26, 24.26, 24.26, 24.26, 24.26, 24.26, 24.26, 24.26, 24.32, 24.26, 24.26, 24.2, 24.26, 24.26, 24.2, 24.2, 24.26, 24.26, 24.2, 24.26, 24.26, 24.26, 24.26, 24.2, 24.26, 24.26, 24.2, 24.2, 24.2, 24.2, 24.2, 24.26, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.13, 24.2, 24.2, 24.2, 24.13, 24.2, 24.13, 24.2, 24.13, 24.2, 24.2, 24.13, 24.13, 24.13, 24.2, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.2, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.13, 24.07, 24.13, 24.13, 24.13, 24.07, 24.13, 24.13, 24.13, 24.13]
# smoother = TempSmoother(2, 0.1)
# smoothed = [smoother.get_next(t) for t in temps]
# print(smoothed)
